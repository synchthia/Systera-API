// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.3
// source: systera.proto

package systerapb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// API Result
type CallResult int32

const (
	CallResult_SUCCESS    CallResult = 0
	CallResult_NOT_FOUND  CallResult = 1
	CallResult_DUPLICATED CallResult = 2
)

// Enum value maps for CallResult.
var (
	CallResult_name = map[int32]string{
		0: "SUCCESS",
		1: "NOT_FOUND",
		2: "DUPLICATED",
	}
	CallResult_value = map[string]int32{
		"SUCCESS":    0,
		"NOT_FOUND":  1,
		"DUPLICATED": 2,
	}
)

func (x CallResult) Enum() *CallResult {
	p := new(CallResult)
	*p = x
	return p
}

func (x CallResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CallResult) Descriptor() protoreflect.EnumDescriptor {
	return file_systera_proto_enumTypes[0].Descriptor()
}

func (CallResult) Type() protoreflect.EnumType {
	return &file_systera_proto_enumTypes[0]
}

func (x CallResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CallResult.Descriptor instead.
func (CallResult) EnumDescriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{0}
}

// PLAYER PUNISHMENTS
type PunishLevel int32

const (
	PunishLevel_UNKNOWN PunishLevel = 0
	PunishLevel_WARN    PunishLevel = 1
	PunishLevel_KICK    PunishLevel = 2
	PunishLevel_TEMPBAN PunishLevel = 3
	PunishLevel_PERMBAN PunishLevel = 4
)

// Enum value maps for PunishLevel.
var (
	PunishLevel_name = map[int32]string{
		0: "UNKNOWN",
		1: "WARN",
		2: "KICK",
		3: "TEMPBAN",
		4: "PERMBAN",
	}
	PunishLevel_value = map[string]int32{
		"UNKNOWN": 0,
		"WARN":    1,
		"KICK":    2,
		"TEMPBAN": 3,
		"PERMBAN": 4,
	}
)

func (x PunishLevel) Enum() *PunishLevel {
	p := new(PunishLevel)
	*p = x
	return p
}

func (x PunishLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PunishLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_systera_proto_enumTypes[1].Descriptor()
}

func (PunishLevel) Type() protoreflect.EnumType {
	return &file_systera_proto_enumTypes[1]
}

func (x PunishLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PunishLevel.Descriptor instead.
func (PunishLevel) EnumDescriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{1}
}

type SystemStream_Type int32

const (
	SystemStream_DISPATCH SystemStream_Type = 0
	SystemStream_ANNOUNCE SystemStream_Type = 1
)

// Enum value maps for SystemStream_Type.
var (
	SystemStream_Type_name = map[int32]string{
		0: "DISPATCH",
		1: "ANNOUNCE",
	}
	SystemStream_Type_value = map[string]int32{
		"DISPATCH": 0,
		"ANNOUNCE": 1,
	}
)

func (x SystemStream_Type) Enum() *SystemStream_Type {
	p := new(SystemStream_Type)
	*p = x
	return p
}

func (x SystemStream_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemStream_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_systera_proto_enumTypes[2].Descriptor()
}

func (SystemStream_Type) Type() protoreflect.EnumType {
	return &file_systera_proto_enumTypes[2]
}

func (x SystemStream_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemStream_Type.Descriptor instead.
func (SystemStream_Type) EnumDescriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{8, 0}
}

type PlayerStream_Type int32

const (
	PlayerStream_ALL      PlayerStream_Type = 0
	PlayerStream_GROUPS   PlayerStream_Type = 1
	PlayerStream_SETTINGS PlayerStream_Type = 2
)

// Enum value maps for PlayerStream_Type.
var (
	PlayerStream_Type_name = map[int32]string{
		0: "ALL",
		1: "GROUPS",
		2: "SETTINGS",
	}
	PlayerStream_Type_value = map[string]int32{
		"ALL":      0,
		"GROUPS":   1,
		"SETTINGS": 2,
	}
)

func (x PlayerStream_Type) Enum() *PlayerStream_Type {
	p := new(PlayerStream_Type)
	*p = x
	return p
}

func (x PlayerStream_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerStream_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_systera_proto_enumTypes[3].Descriptor()
}

func (PlayerStream_Type) Type() protoreflect.EnumType {
	return &file_systera_proto_enumTypes[3]
}

func (x PlayerStream_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerStream_Type.Descriptor instead.
func (PlayerStream_Type) EnumDescriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{9, 0}
}

type PunishmentStream_Type int32

const (
	PunishmentStream_PUNISH PunishmentStream_Type = 0
	PunishmentStream_REPORT PunishmentStream_Type = 1
)

// Enum value maps for PunishmentStream_Type.
var (
	PunishmentStream_Type_name = map[int32]string{
		0: "PUNISH",
		1: "REPORT",
	}
	PunishmentStream_Type_value = map[string]int32{
		"PUNISH": 0,
		"REPORT": 1,
	}
)

func (x PunishmentStream_Type) Enum() *PunishmentStream_Type {
	p := new(PunishmentStream_Type)
	*p = x
	return p
}

func (x PunishmentStream_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PunishmentStream_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_systera_proto_enumTypes[4].Descriptor()
}

func (PunishmentStream_Type) Type() protoreflect.EnumType {
	return &file_systera_proto_enumTypes[4]
}

func (x PunishmentStream_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PunishmentStream_Type.Descriptor instead.
func (PunishmentStream_Type) EnumDescriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{10, 0}
}

type GroupStream_Type int32

const (
	GroupStream_GROUP       GroupStream_Type = 0
	GroupStream_PERMISSIONS GroupStream_Type = 1
)

// Enum value maps for GroupStream_Type.
var (
	GroupStream_Type_name = map[int32]string{
		0: "GROUP",
		1: "PERMISSIONS",
	}
	GroupStream_Type_value = map[string]int32{
		"GROUP":       0,
		"PERMISSIONS": 1,
	}
)

func (x GroupStream_Type) Enum() *GroupStream_Type {
	p := new(GroupStream_Type)
	*p = x
	return p
}

func (x GroupStream_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupStream_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_systera_proto_enumTypes[5].Descriptor()
}

func (GroupStream_Type) Type() protoreflect.EnumType {
	return &file_systera_proto_enumTypes[5]
}

func (x GroupStream_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupStream_Type.Descriptor instead.
func (GroupStream_Type) EnumDescriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{12, 0}
}

type ChatStream_Type int32

const (
	ChatStream_CHAT ChatStream_Type = 0
)

// Enum value maps for ChatStream_Type.
var (
	ChatStream_Type_name = map[int32]string{
		0: "CHAT",
	}
	ChatStream_Type_value = map[string]int32{
		"CHAT": 0,
	}
)

func (x ChatStream_Type) Enum() *ChatStream_Type {
	p := new(ChatStream_Type)
	*p = x
	return p
}

func (x ChatStream_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatStream_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_systera_proto_enumTypes[6].Descriptor()
}

func (ChatStream_Type) Type() protoreflect.EnumType {
	return &file_systera_proto_enumTypes[6]
}

func (x ChatStream_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatStream_Type.Descriptor instead.
func (ChatStream_Type) EnumDescriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{13, 0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{0}
}

// Stream API
type AnnounceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target  string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AnnounceRequest) Reset() {
	*x = AnnounceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnnounceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnnounceRequest) ProtoMessage() {}

func (x *AnnounceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnnounceRequest.ProtoReflect.Descriptor instead.
func (*AnnounceRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{1}
}

func (x *AnnounceRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *AnnounceRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DispatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Cmd    string `protobuf:"bytes,2,opt,name=cmd,proto3" json:"cmd,omitempty"`
}

func (x *DispatchRequest) Reset() {
	*x = DispatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DispatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatchRequest) ProtoMessage() {}

func (x *DispatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatchRequest.ProtoReflect.Descriptor instead.
func (*DispatchRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{2}
}

func (x *DispatchRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *DispatchRequest) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

type ChatEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// author - name with diplayName
	Author     *PlayerIdentity `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	ServerName string          `protobuf:"bytes,2,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	Message    string          `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ChatEntry) Reset() {
	*x = ChatEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatEntry) ProtoMessage() {}

func (x *ChatEntry) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatEntry.ProtoReflect.Descriptor instead.
func (*ChatEntry) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{3}
}

func (x *ChatEntry) GetAuthor() *PlayerIdentity {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *ChatEntry) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *ChatEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ChatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry *ChatEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *ChatRequest) Reset() {
	*x = ChatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRequest) ProtoMessage() {}

func (x *ChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRequest.ProtoReflect.Descriptor instead.
func (*ChatRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{4}
}

func (x *ChatRequest) GetEntry() *ChatEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type AddChatIgnoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid   string          `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Target *PlayerIdentity `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *AddChatIgnoreRequest) Reset() {
	*x = AddChatIgnoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddChatIgnoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddChatIgnoreRequest) ProtoMessage() {}

func (x *AddChatIgnoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddChatIgnoreRequest.ProtoReflect.Descriptor instead.
func (*AddChatIgnoreRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{5}
}

func (x *AddChatIgnoreRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AddChatIgnoreRequest) GetTarget() *PlayerIdentity {
	if x != nil {
		return x.Target
	}
	return nil
}

type RemoveChatIgnoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid   string          `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Target *PlayerIdentity `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *RemoveChatIgnoreRequest) Reset() {
	*x = RemoveChatIgnoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveChatIgnoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveChatIgnoreRequest) ProtoMessage() {}

func (x *RemoveChatIgnoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveChatIgnoreRequest.ProtoReflect.Descriptor instead.
func (*RemoveChatIgnoreRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveChatIgnoreRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RemoveChatIgnoreRequest) GetTarget() *PlayerIdentity {
	if x != nil {
		return x.Target
	}
	return nil
}

type ChatIgnoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   CallResult      `protobuf:"varint,1,opt,name=result,proto3,enum=systerapb.CallResult" json:"result,omitempty"`
	Identity *PlayerIdentity `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *ChatIgnoreResponse) Reset() {
	*x = ChatIgnoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatIgnoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatIgnoreResponse) ProtoMessage() {}

func (x *ChatIgnoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatIgnoreResponse.ProtoReflect.Descriptor instead.
func (*ChatIgnoreResponse) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{7}
}

func (x *ChatIgnoreResponse) GetResult() CallResult {
	if x != nil {
		return x.Result
	}
	return CallResult_SUCCESS
}

func (x *ChatIgnoreResponse) GetIdentity() *PlayerIdentity {
	if x != nil {
		return x.Identity
	}
	return nil
}

// System
type SystemStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type SystemStream_Type `protobuf:"varint,1,opt,name=type,proto3,enum=systerapb.SystemStream_Type" json:"type,omitempty"`
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SystemStream) Reset() {
	*x = SystemStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStream) ProtoMessage() {}

func (x *SystemStream) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStream.ProtoReflect.Descriptor instead.
func (*SystemStream) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{8}
}

func (x *SystemStream) GetType() SystemStream_Type {
	if x != nil {
		return x.Type
	}
	return SystemStream_DISPATCH
}

func (x *SystemStream) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// Player
type PlayerStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  PlayerStream_Type `protobuf:"varint,1,opt,name=type,proto3,enum=systerapb.PlayerStream_Type" json:"type,omitempty"`
	Entry *PlayerEntry      `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *PlayerStream) Reset() {
	*x = PlayerStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStream) ProtoMessage() {}

func (x *PlayerStream) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStream.ProtoReflect.Descriptor instead.
func (*PlayerStream) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{9}
}

func (x *PlayerStream) GetType() PlayerStream_Type {
	if x != nil {
		return x.Type
	}
	return PlayerStream_ALL
}

func (x *PlayerStream) GetEntry() *PlayerEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

// Punishment
type PunishmentStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type              PunishmentStream_Type `protobuf:"varint,1,opt,name=type,proto3,enum=systerapb.PunishmentStream_Type" json:"type,omitempty"`
	PunishStreamEntry *PunishStreamEntry    `protobuf:"bytes,2,opt,name=punish_stream_entry,json=punishStreamEntry,proto3" json:"punish_stream_entry,omitempty"`
	ReportEntry       *ReportEntry          `protobuf:"bytes,3,opt,name=report_entry,json=reportEntry,proto3" json:"report_entry,omitempty"`
}

func (x *PunishmentStream) Reset() {
	*x = PunishmentStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PunishmentStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PunishmentStream) ProtoMessage() {}

func (x *PunishmentStream) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PunishmentStream.ProtoReflect.Descriptor instead.
func (*PunishmentStream) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{10}
}

func (x *PunishmentStream) GetType() PunishmentStream_Type {
	if x != nil {
		return x.Type
	}
	return PunishmentStream_PUNISH
}

func (x *PunishmentStream) GetPunishStreamEntry() *PunishStreamEntry {
	if x != nil {
		return x.PunishStreamEntry
	}
	return nil
}

func (x *PunishmentStream) GetReportEntry() *ReportEntry {
	if x != nil {
		return x.ReportEntry
	}
	return nil
}

type PunishStreamEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry          *PunishEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	RequireExecute bool         `protobuf:"varint,2,opt,name=require_execute,json=requireExecute,proto3" json:"require_execute,omitempty"`
}

func (x *PunishStreamEntry) Reset() {
	*x = PunishStreamEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PunishStreamEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PunishStreamEntry) ProtoMessage() {}

func (x *PunishStreamEntry) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PunishStreamEntry.ProtoReflect.Descriptor instead.
func (*PunishStreamEntry) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{11}
}

func (x *PunishStreamEntry) GetEntry() *PunishEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *PunishStreamEntry) GetRequireExecute() bool {
	if x != nil {
		return x.RequireExecute
	}
	return false
}

// Group
type GroupStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       GroupStream_Type `protobuf:"varint,1,opt,name=type,proto3,enum=systerapb.GroupStream_Type" json:"type,omitempty"`
	GroupEntry *GroupEntry      `protobuf:"bytes,2,opt,name=group_entry,json=groupEntry,proto3" json:"group_entry,omitempty"`
}

func (x *GroupStream) Reset() {
	*x = GroupStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupStream) ProtoMessage() {}

func (x *GroupStream) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupStream.ProtoReflect.Descriptor instead.
func (*GroupStream) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{12}
}

func (x *GroupStream) GetType() GroupStream_Type {
	if x != nil {
		return x.Type
	}
	return GroupStream_GROUP
}

func (x *GroupStream) GetGroupEntry() *GroupEntry {
	if x != nil {
		return x.GroupEntry
	}
	return nil
}

// TextMessage
type ChatStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      ChatStream_Type `protobuf:"varint,1,opt,name=type,proto3,enum=systerapb.ChatStream_Type" json:"type,omitempty"`
	ChatEntry *ChatEntry      `protobuf:"bytes,2,opt,name=chat_entry,json=chatEntry,proto3" json:"chat_entry,omitempty"`
}

func (x *ChatStream) Reset() {
	*x = ChatStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatStream) ProtoMessage() {}

func (x *ChatStream) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatStream.ProtoReflect.Descriptor instead.
func (*ChatStream) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{13}
}

func (x *ChatStream) GetType() ChatStream_Type {
	if x != nil {
		return x.Type
	}
	return ChatStream_CHAT
}

func (x *ChatStream) GetChatEntry() *ChatEntry {
	if x != nil {
		return x.ChatEntry
	}
	return nil
}

// PLAYER PROFILE
type PlayerIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PlayerIdentity) Reset() {
	*x = PlayerIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerIdentity) ProtoMessage() {}

func (x *PlayerIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerIdentity.ProtoReflect.Descriptor instead.
func (*PlayerIdentity) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{14}
}

func (x *PlayerIdentity) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *PlayerIdentity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetPlayerIdentityByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetPlayerIdentityByNameRequest) Reset() {
	*x = GetPlayerIdentityByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerIdentityByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerIdentityByNameRequest) ProtoMessage() {}

func (x *GetPlayerIdentityByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerIdentityByNameRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerIdentityByNameRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{15}
}

func (x *GetPlayerIdentityByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetPlayerIdentityByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity *PlayerIdentity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Exists   bool            `protobuf:"varint,2,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *GetPlayerIdentityByNameResponse) Reset() {
	*x = GetPlayerIdentityByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerIdentityByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerIdentityByNameResponse) ProtoMessage() {}

func (x *GetPlayerIdentityByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerIdentityByNameResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerIdentityByNameResponse) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{16}
}

func (x *GetPlayerIdentityByNameResponse) GetIdentity() *PlayerIdentity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *GetPlayerIdentityByNameResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type PlayerSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JoinMessage bool `protobuf:"varint,1,opt,name=join_message,json=joinMessage,proto3" json:"join_message,omitempty"`
	Vanish      bool `protobuf:"varint,2,opt,name=vanish,proto3" json:"vanish,omitempty"`
	Japanize    bool `protobuf:"varint,3,opt,name=japanize,proto3" json:"japanize,omitempty"`
	GlobalChat  bool `protobuf:"varint,4,opt,name=global_chat,json=globalChat,proto3" json:"global_chat,omitempty"`
}

func (x *PlayerSettings) Reset() {
	*x = PlayerSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerSettings) ProtoMessage() {}

func (x *PlayerSettings) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerSettings.ProtoReflect.Descriptor instead.
func (*PlayerSettings) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{17}
}

func (x *PlayerSettings) GetJoinMessage() bool {
	if x != nil {
		return x.JoinMessage
	}
	return false
}

func (x *PlayerSettings) GetVanish() bool {
	if x != nil {
		return x.Vanish
	}
	return false
}

func (x *PlayerSettings) GetJapanize() bool {
	if x != nil {
		return x.Japanize
	}
	return false
}

func (x *PlayerSettings) GetGlobalChat() bool {
	if x != nil {
		return x.GlobalChat
	}
	return false
}

type PlayerEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid          string            `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name          string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CurrentServer string            `protobuf:"bytes,3,opt,name=current_server,json=currentServer,proto3" json:"current_server,omitempty"`
	FirstLogin    int64             `protobuf:"varint,4,opt,name=first_login,json=firstLogin,proto3" json:"first_login,omitempty"`
	LastLogin     int64             `protobuf:"varint,5,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`
	Groups        []string          `protobuf:"bytes,6,rep,name=groups,proto3" json:"groups,omitempty"`
	Settings      *PlayerSettings   `protobuf:"bytes,7,opt,name=settings,proto3" json:"settings,omitempty"`
	PlayerIgnore  []*PlayerIdentity `protobuf:"bytes,8,rep,name=player_ignore,json=playerIgnore,proto3" json:"player_ignore,omitempty"`
}

func (x *PlayerEntry) Reset() {
	*x = PlayerEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerEntry) ProtoMessage() {}

func (x *PlayerEntry) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerEntry.ProtoReflect.Descriptor instead.
func (*PlayerEntry) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{18}
}

func (x *PlayerEntry) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *PlayerEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerEntry) GetCurrentServer() string {
	if x != nil {
		return x.CurrentServer
	}
	return ""
}

func (x *PlayerEntry) GetFirstLogin() int64 {
	if x != nil {
		return x.FirstLogin
	}
	return 0
}

func (x *PlayerEntry) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *PlayerEntry) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *PlayerEntry) GetSettings() *PlayerSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *PlayerEntry) GetPlayerIgnore() []*PlayerIdentity {
	if x != nil {
		return x.PlayerIgnore
	}
	return nil
}

type InitPlayerProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IpAddress string `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Hostname  string `protobuf:"bytes,4,opt,name=hostname,proto3" json:"hostname,omitempty"`
}

func (x *InitPlayerProfileRequest) Reset() {
	*x = InitPlayerProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitPlayerProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitPlayerProfileRequest) ProtoMessage() {}

func (x *InitPlayerProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitPlayerProfileRequest.ProtoReflect.Descriptor instead.
func (*InitPlayerProfileRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{19}
}

func (x *InitPlayerProfileRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *InitPlayerProfileRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InitPlayerProfileRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *InitPlayerProfileRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type InitPlayerProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry *PlayerEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *InitPlayerProfileResponse) Reset() {
	*x = InitPlayerProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitPlayerProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitPlayerProfileResponse) ProtoMessage() {}

func (x *InitPlayerProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitPlayerProfileResponse.ProtoReflect.Descriptor instead.
func (*InitPlayerProfileResponse) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{20}
}

func (x *InitPlayerProfileResponse) GetEntry() *PlayerEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type FetchPlayerProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *FetchPlayerProfileRequest) Reset() {
	*x = FetchPlayerProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchPlayerProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchPlayerProfileRequest) ProtoMessage() {}

func (x *FetchPlayerProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchPlayerProfileRequest.ProtoReflect.Descriptor instead.
func (*FetchPlayerProfileRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{21}
}

func (x *FetchPlayerProfileRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type FetchPlayerProfileByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *FetchPlayerProfileByNameRequest) Reset() {
	*x = FetchPlayerProfileByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchPlayerProfileByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchPlayerProfileByNameRequest) ProtoMessage() {}

func (x *FetchPlayerProfileByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchPlayerProfileByNameRequest.ProtoReflect.Descriptor instead.
func (*FetchPlayerProfileByNameRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{22}
}

func (x *FetchPlayerProfileByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FetchPlayerProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry *PlayerEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *FetchPlayerProfileResponse) Reset() {
	*x = FetchPlayerProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchPlayerProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchPlayerProfileResponse) ProtoMessage() {}

func (x *FetchPlayerProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchPlayerProfileResponse.ProtoReflect.Descriptor instead.
func (*FetchPlayerProfileResponse) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{23}
}

func (x *FetchPlayerProfileResponse) GetEntry() *PlayerEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type SetPlayerGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid   string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Groups []string `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *SetPlayerGroupsRequest) Reset() {
	*x = SetPlayerGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerGroupsRequest) ProtoMessage() {}

func (x *SetPlayerGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerGroupsRequest.ProtoReflect.Descriptor instead.
func (*SetPlayerGroupsRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{24}
}

func (x *SetPlayerGroupsRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SetPlayerGroupsRequest) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

type SetPlayerServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ServerName string `protobuf:"bytes,2,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
}

func (x *SetPlayerServerRequest) Reset() {
	*x = SetPlayerServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerServerRequest) ProtoMessage() {}

func (x *SetPlayerServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerServerRequest.ProtoReflect.Descriptor instead.
func (*SetPlayerServerRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{25}
}

func (x *SetPlayerServerRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SetPlayerServerRequest) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

type RemovePlayerServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ServerName string `protobuf:"bytes,2,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
}

func (x *RemovePlayerServerRequest) Reset() {
	*x = RemovePlayerServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePlayerServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePlayerServerRequest) ProtoMessage() {}

func (x *RemovePlayerServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePlayerServerRequest.ProtoReflect.Descriptor instead.
func (*RemovePlayerServerRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{26}
}

func (x *RemovePlayerServerRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RemovePlayerServerRequest) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

type SetPlayerSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid     string          `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Settings *PlayerSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *SetPlayerSettingsRequest) Reset() {
	*x = SetPlayerSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerSettingsRequest) ProtoMessage() {}

func (x *SetPlayerSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerSettingsRequest.ProtoReflect.Descriptor instead.
func (*SetPlayerSettingsRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{27}
}

func (x *SetPlayerSettingsRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SetPlayerSettingsRequest) GetSettings() *PlayerSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// ALTLOOKUP
type AddressesEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Hostname  string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	FirstSeen int64  `protobuf:"varint,3,opt,name=first_seen,json=firstSeen,proto3" json:"first_seen,omitempty"`
	LastSeen  int64  `protobuf:"varint,4,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
}

func (x *AddressesEntry) Reset() {
	*x = AddressesEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressesEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressesEntry) ProtoMessage() {}

func (x *AddressesEntry) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressesEntry.ProtoReflect.Descriptor instead.
func (*AddressesEntry) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{28}
}

func (x *AddressesEntry) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressesEntry) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *AddressesEntry) GetFirstSeen() int64 {
	if x != nil {
		return x.FirstSeen
	}
	return 0
}

func (x *AddressesEntry) GetLastSeen() int64 {
	if x != nil {
		return x.LastSeen
	}
	return 0
}

type AltLookupEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string            `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name      string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Addresses []*AddressesEntry `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *AltLookupEntry) Reset() {
	*x = AltLookupEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AltLookupEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AltLookupEntry) ProtoMessage() {}

func (x *AltLookupEntry) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AltLookupEntry.ProtoReflect.Descriptor instead.
func (*AltLookupEntry) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{29}
}

func (x *AltLookupEntry) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AltLookupEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AltLookupEntry) GetAddresses() []*AddressesEntry {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type AltLookupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerUuid string `protobuf:"bytes,1,opt,name=player_uuid,json=playerUuid,proto3" json:"player_uuid,omitempty"`
}

func (x *AltLookupRequest) Reset() {
	*x = AltLookupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AltLookupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AltLookupRequest) ProtoMessage() {}

func (x *AltLookupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AltLookupRequest.ProtoReflect.Descriptor instead.
func (*AltLookupRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{30}
}

func (x *AltLookupRequest) GetPlayerUuid() string {
	if x != nil {
		return x.PlayerUuid
	}
	return ""
}

type AltLookupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*AltLookupEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *AltLookupResponse) Reset() {
	*x = AltLookupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AltLookupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AltLookupResponse) ProtoMessage() {}

func (x *AltLookupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AltLookupResponse.ProtoReflect.Descriptor instead.
func (*AltLookupResponse) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{31}
}

func (x *AltLookupResponse) GetEntries() []*AltLookupEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type PunishEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Available    bool            `protobuf:"varint,1,opt,name=available,proto3" json:"available,omitempty"`
	Level        PunishLevel     `protobuf:"varint,2,opt,name=level,proto3,enum=systerapb.PunishLevel" json:"level,omitempty"`
	Reason       string          `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Date         int64           `protobuf:"varint,4,opt,name=date,proto3" json:"date,omitempty"`
	Expire       int64           `protobuf:"varint,5,opt,name=expire,proto3" json:"expire,omitempty"`
	PunishedFrom *PlayerIdentity `protobuf:"bytes,6,opt,name=punished_from,json=punishedFrom,proto3" json:"punished_from,omitempty"`
	PunishedTo   *PlayerIdentity `protobuf:"bytes,7,opt,name=punished_to,json=punishedTo,proto3" json:"punished_to,omitempty"`
}

func (x *PunishEntry) Reset() {
	*x = PunishEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PunishEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PunishEntry) ProtoMessage() {}

func (x *PunishEntry) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PunishEntry.ProtoReflect.Descriptor instead.
func (*PunishEntry) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{32}
}

func (x *PunishEntry) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *PunishEntry) GetLevel() PunishLevel {
	if x != nil {
		return x.Level
	}
	return PunishLevel_UNKNOWN
}

func (x *PunishEntry) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *PunishEntry) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *PunishEntry) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *PunishEntry) GetPunishedFrom() *PlayerIdentity {
	if x != nil {
		return x.PunishedFrom
	}
	return nil
}

func (x *PunishEntry) GetPunishedTo() *PlayerIdentity {
	if x != nil {
		return x.PunishedTo
	}
	return nil
}

type GetPlayerPunishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid           string      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	FilterLevel    PunishLevel `protobuf:"varint,2,opt,name=filter_level,json=filterLevel,proto3,enum=systerapb.PunishLevel" json:"filter_level,omitempty"`
	IncludeExpired bool        `protobuf:"varint,3,opt,name=include_expired,json=includeExpired,proto3" json:"include_expired,omitempty"`
}

func (x *GetPlayerPunishRequest) Reset() {
	*x = GetPlayerPunishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerPunishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerPunishRequest) ProtoMessage() {}

func (x *GetPlayerPunishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerPunishRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerPunishRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{33}
}

func (x *GetPlayerPunishRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetPlayerPunishRequest) GetFilterLevel() PunishLevel {
	if x != nil {
		return x.FilterLevel
	}
	return PunishLevel_UNKNOWN
}

func (x *GetPlayerPunishRequest) GetIncludeExpired() bool {
	if x != nil {
		return x.IncludeExpired
	}
	return false
}

type GetPlayerPunishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry []*PunishEntry `protobuf:"bytes,1,rep,name=entry,proto3" json:"entry,omitempty"`
}

func (x *GetPlayerPunishResponse) Reset() {
	*x = GetPlayerPunishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerPunishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerPunishResponse) ProtoMessage() {}

func (x *GetPlayerPunishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerPunishResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerPunishResponse) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{34}
}

func (x *GetPlayerPunishResponse) GetEntry() []*PunishEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type SetPlayerPunishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// remote - use with stream?
	Remote bool `protobuf:"varint,1,opt,name=remote,proto3" json:"remote,omitempty"`
	// force - force punish? (without InitPlayerProfile phase)
	Force bool `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	// entry - Punishment details
	Entry *PunishEntry `protobuf:"bytes,3,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *SetPlayerPunishRequest) Reset() {
	*x = SetPlayerPunishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerPunishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerPunishRequest) ProtoMessage() {}

func (x *SetPlayerPunishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerPunishRequest.ProtoReflect.Descriptor instead.
func (*SetPlayerPunishRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{35}
}

func (x *SetPlayerPunishRequest) GetRemote() bool {
	if x != nil {
		return x.Remote
	}
	return false
}

func (x *SetPlayerPunishRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *SetPlayerPunishRequest) GetEntry() *PunishEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type SetPlayerPunishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoProfile bool `protobuf:"varint,1,opt,name=no_profile,json=noProfile,proto3" json:"no_profile,omitempty"`
	Offline   bool `protobuf:"varint,2,opt,name=offline,proto3" json:"offline,omitempty"`
	Duplicate bool `protobuf:"varint,3,opt,name=duplicate,proto3" json:"duplicate,omitempty"`
	Cooldown  bool `protobuf:"varint,4,opt,name=cooldown,proto3" json:"cooldown,omitempty"`
}

func (x *SetPlayerPunishResponse) Reset() {
	*x = SetPlayerPunishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerPunishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerPunishResponse) ProtoMessage() {}

func (x *SetPlayerPunishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerPunishResponse.ProtoReflect.Descriptor instead.
func (*SetPlayerPunishResponse) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{36}
}

func (x *SetPlayerPunishResponse) GetNoProfile() bool {
	if x != nil {
		return x.NoProfile
	}
	return false
}

func (x *SetPlayerPunishResponse) GetOffline() bool {
	if x != nil {
		return x.Offline
	}
	return false
}

func (x *SetPlayerPunishResponse) GetDuplicate() bool {
	if x != nil {
		return x.Duplicate
	}
	return false
}

func (x *SetPlayerPunishResponse) GetCooldown() bool {
	if x != nil {
		return x.Cooldown
	}
	return false
}

type UnBanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target *PlayerIdentity `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *UnBanRequest) Reset() {
	*x = UnBanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnBanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnBanRequest) ProtoMessage() {}

func (x *UnBanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnBanRequest.ProtoReflect.Descriptor instead.
func (*UnBanRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{37}
}

func (x *UnBanRequest) GetTarget() *PlayerIdentity {
	if x != nil {
		return x.Target
	}
	return nil
}

type UnBanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnBanResponse) Reset() {
	*x = UnBanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnBanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnBanResponse) ProtoMessage() {}

func (x *UnBanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnBanResponse.ProtoReflect.Descriptor instead.
func (*UnBanResponse) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{38}
}

type ReportEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From    *PlayerIdentity `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To      *PlayerIdentity `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Message string          `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Date    int64           `protobuf:"varint,4,opt,name=date,proto3" json:"date,omitempty"`
	Server  string          `protobuf:"bytes,5,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *ReportEntry) Reset() {
	*x = ReportEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportEntry) ProtoMessage() {}

func (x *ReportEntry) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportEntry.ProtoReflect.Descriptor instead.
func (*ReportEntry) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{39}
}

func (x *ReportEntry) GetFrom() *PlayerIdentity {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ReportEntry) GetTo() *PlayerIdentity {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *ReportEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ReportEntry) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *ReportEntry) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

type ReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From       *PlayerIdentity `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To         *PlayerIdentity `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	ServerName string          `protobuf:"bytes,3,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	Message    string          `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ReportRequest) Reset() {
	*x = ReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRequest) ProtoMessage() {}

func (x *ReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRequest.ProtoReflect.Descriptor instead.
func (*ReportRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{40}
}

func (x *ReportRequest) GetFrom() *PlayerIdentity {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ReportRequest) GetTo() *PlayerIdentity {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *ReportRequest) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *ReportRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportResponse) Reset() {
	*x = ReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportResponse) ProtoMessage() {}

func (x *ReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportResponse.ProtoReflect.Descriptor instead.
func (*ReportResponse) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{41}
}

// GROUP PERMISISONS
type GroupEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName   string              `protobuf:"bytes,1,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	GroupPrefix string              `protobuf:"bytes,2,opt,name=group_prefix,json=groupPrefix,proto3" json:"group_prefix,omitempty"`
	Permissions []*PermissionsEntry `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *GroupEntry) Reset() {
	*x = GroupEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupEntry) ProtoMessage() {}

func (x *GroupEntry) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupEntry.ProtoReflect.Descriptor instead.
func (*GroupEntry) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{42}
}

func (x *GroupEntry) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GroupEntry) GetGroupPrefix() string {
	if x != nil {
		return x.GroupPrefix
	}
	return ""
}

func (x *GroupEntry) GetPermissions() []*PermissionsEntry {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type PermissionsEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerName  string   `protobuf:"bytes,1,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	Permissions []string `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *PermissionsEntry) Reset() {
	*x = PermissionsEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionsEntry) ProtoMessage() {}

func (x *PermissionsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionsEntry.ProtoReflect.Descriptor instead.
func (*PermissionsEntry) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{43}
}

func (x *PermissionsEntry) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *PermissionsEntry) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type FetchGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FetchGroupsRequest) Reset() {
	*x = FetchGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchGroupsRequest) ProtoMessage() {}

func (x *FetchGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchGroupsRequest.ProtoReflect.Descriptor instead.
func (*FetchGroupsRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{44}
}

type FetchGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*GroupEntry `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *FetchGroupsResponse) Reset() {
	*x = FetchGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchGroupsResponse) ProtoMessage() {}

func (x *FetchGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchGroupsResponse.ProtoReflect.Descriptor instead.
func (*FetchGroupsResponse) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{45}
}

func (x *FetchGroupsResponse) GetGroups() []*GroupEntry {
	if x != nil {
		return x.Groups
	}
	return nil
}

type CreateGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupEntry *GroupEntry `protobuf:"bytes,1,opt,name=group_entry,json=groupEntry,proto3" json:"group_entry,omitempty"`
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{46}
}

func (x *CreateGroupRequest) GetGroupEntry() *GroupEntry {
	if x != nil {
		return x.GroupEntry
	}
	return nil
}

type RemoveGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName string `protobuf:"bytes,1,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
}

func (x *RemoveGroupRequest) Reset() {
	*x = RemoveGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGroupRequest) ProtoMessage() {}

func (x *RemoveGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGroupRequest.ProtoReflect.Descriptor instead.
func (*RemoveGroupRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{47}
}

func (x *RemoveGroupRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type AddPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName   string   `protobuf:"bytes,1,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	Target      string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Permissions []string `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *AddPermissionRequest) Reset() {
	*x = AddPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPermissionRequest) ProtoMessage() {}

func (x *AddPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPermissionRequest.ProtoReflect.Descriptor instead.
func (*AddPermissionRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{48}
}

func (x *AddPermissionRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *AddPermissionRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *AddPermissionRequest) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type RemovePermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName   string   `protobuf:"bytes,1,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	Target      string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Permissions []string `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *RemovePermissionRequest) Reset() {
	*x = RemovePermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_systera_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePermissionRequest) ProtoMessage() {}

func (x *RemovePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_systera_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePermissionRequest.ProtoReflect.Descriptor instead.
func (*RemovePermissionRequest) Descriptor() ([]byte, []int) {
	return file_systera_proto_rawDescGZIP(), []int{49}
}

func (x *RemovePermissionRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *RemovePermissionRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *RemovePermissionRequest) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

var File_systera_proto protoreflect.FileDescriptor

var file_systera_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x43, 0x0a, 0x0f, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3b, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x63, 0x6d, 0x64, 0x22, 0x79, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x31, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x39, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x5d, 0x0a, 0x14, 0x41,
	0x64, 0x64, 0x43, 0x68, 0x61, 0x74, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72,
	0x61, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x60, 0x0a, 0x17, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x74, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x7a, 0x0a, 0x12,
	0x43, 0x68, 0x61, 0x74, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x43,
	0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x35, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x76, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61,
	0x70, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x22, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x50, 0x41, 0x54, 0x43, 0x48,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x4e, 0x4e, 0x4f, 0x55, 0x4e, 0x43, 0x45, 0x10, 0x01,
	0x22, 0x99, 0x01, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x22, 0x29, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x53, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x53, 0x45, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x53, 0x10, 0x02, 0x22, 0xf1, 0x01, 0x0a,
	0x10, 0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x6e, 0x69,
	0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4c, 0x0a, 0x13, 0x70, 0x75, 0x6e, 0x69, 0x73,
	0x68, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62,
	0x2e, 0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x11, 0x70, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x22, 0x1e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x55, 0x4e, 0x49,
	0x53, 0x48, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x01,
	0x22, 0x6a, 0x0a, 0x11, 0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62,
	0x2e, 0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x22, 0x9a, 0x01, 0x0a,
	0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2f, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a,
	0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x22, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a,
	0x05, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x45, 0x52, 0x4d,
	0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x01, 0x22, 0x83, 0x01, 0x0a, 0x0a, 0x43, 0x68,
	0x61, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61,
	0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x09, 0x63, 0x68, 0x61, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x10, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x48, 0x41, 0x54, 0x10, 0x00, 0x22,
	0x38, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x70, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6a, 0x6f, 0x69, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6e, 0x69, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x76, 0x61, 0x6e, 0x69, 0x73, 0x68, 0x12,
	0x1a, 0x0a, 0x08, 0x6a, 0x61, 0x70, 0x61, 0x6e, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x6a, 0x61, 0x70, 0x61, 0x6e, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x74, 0x22, 0xab, 0x02, 0x0a,
	0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70,
	0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x22, 0x7d, 0x0a, 0x18, 0x49, 0x6e,
	0x69, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x49, 0x0a, 0x19, 0x49, 0x6e, 0x69,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70,
	0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x22, 0x2f, 0x0a, 0x19, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x1f, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x1a,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x44, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x4d,
	0x0a, 0x16, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a,
	0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x65, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x35, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x22, 0x71, 0x0a, 0x0e, 0x41,
	0x6c, 0x74, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x72, 0x61, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x33,
	0x0a, 0x10, 0x41, 0x6c, 0x74, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55,
	0x75, 0x69, 0x64, 0x22, 0x48, 0x0a, 0x11, 0x41, 0x6c, 0x74, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x74, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x99, 0x02,
	0x0a, 0x0b, 0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x3e, 0x0a,
	0x0d, 0x70, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x0c, 0x70, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x3a, 0x0a,
	0x0b, 0x70, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x70,
	0x75, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x6f, 0x22, 0x90, 0x01, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x6e, 0x69, 0x73,
	0x68, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x22, 0x47, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61,
	0x70, 0x62, 0x2e, 0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x74, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x2c, 0x0a,
	0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x8c, 0x01, 0x0a, 0x17,
	0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x6f, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x22, 0x41, 0x0a, 0x0c, 0x55, 0x6e,
	0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x0f, 0x0a,
	0x0d, 0x55, 0x6e, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xad,
	0x01, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2d,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x29, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0xa4,
	0x01, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2d, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x29, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x0a, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x3d, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x55, 0x0a, 0x10, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x14,
	0x0a, 0x12, 0x46, 0x65, 0x74, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x13, 0x46, 0x65, 0x74, 0x63, 0x68, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x4c, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x36, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70,
	0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x33, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6f, 0x0a,
	0x14, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x72,
	0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2a, 0x38, 0x0a, 0x0a, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x48, 0x0a, 0x0b,
	0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x41, 0x52, 0x4e,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4b, 0x49, 0x43, 0x4b, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x54, 0x45, 0x4d, 0x50, 0x42, 0x41, 0x4e, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x52,
	0x4d, 0x42, 0x41, 0x4e, 0x10, 0x04, 0x32, 0x9c, 0x0e, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x72, 0x61, 0x12, 0x3a, 0x0a, 0x08, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x12, 0x1a,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3a,
	0x0a, 0x08, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61,
	0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x04, 0x43, 0x68,
	0x61, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x51,
	0x0a, 0x0d, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x74, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x12,
	0x1f, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43,
	0x68, 0x61, 0x74, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x74, 0x49,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x12, 0x22, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x74, 0x49, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60,
	0x0a, 0x11, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x23, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e,
	0x49, 0x6e, 0x69, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x72, 0x61, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x63, 0x0a, 0x12, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x24, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61,
	0x70, 0x62, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x18, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2a, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x21, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46,
	0x0a, 0x0f, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x21, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x23, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x46, 0x0a, 0x09, 0x41, 0x6c, 0x74, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0x1b, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x74, 0x4c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x74, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x21, 0x2e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x21, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72,
	0x61, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x75, 0x6e,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3c, 0x0a, 0x05, 0x55, 0x6e, 0x42, 0x61, 0x6e, 0x12, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x55,
	0x6e, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f,
	0x0a, 0x06, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x72, 0x61, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4e, 0x0a, 0x0b, 0x46, 0x65, 0x74, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x1d,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x40, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x40, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70,
	0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x10, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x37, 0x0a, 0x19, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x79, 0x6e,
	0x63, 0x68, 0x74, 0x68, 0x69, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x72, 0x61, 0x42, 0x0d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x5a, 0x0b, 0x2e, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x72, 0x61, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_systera_proto_rawDescOnce sync.Once
	file_systera_proto_rawDescData = file_systera_proto_rawDesc
)

func file_systera_proto_rawDescGZIP() []byte {
	file_systera_proto_rawDescOnce.Do(func() {
		file_systera_proto_rawDescData = protoimpl.X.CompressGZIP(file_systera_proto_rawDescData)
	})
	return file_systera_proto_rawDescData
}

var file_systera_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_systera_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_systera_proto_goTypes = []interface{}{
	(CallResult)(0),                         // 0: systerapb.CallResult
	(PunishLevel)(0),                        // 1: systerapb.PunishLevel
	(SystemStream_Type)(0),                  // 2: systerapb.SystemStream.Type
	(PlayerStream_Type)(0),                  // 3: systerapb.PlayerStream.Type
	(PunishmentStream_Type)(0),              // 4: systerapb.PunishmentStream.Type
	(GroupStream_Type)(0),                   // 5: systerapb.GroupStream.Type
	(ChatStream_Type)(0),                    // 6: systerapb.ChatStream.Type
	(*Empty)(nil),                           // 7: systerapb.Empty
	(*AnnounceRequest)(nil),                 // 8: systerapb.AnnounceRequest
	(*DispatchRequest)(nil),                 // 9: systerapb.DispatchRequest
	(*ChatEntry)(nil),                       // 10: systerapb.ChatEntry
	(*ChatRequest)(nil),                     // 11: systerapb.ChatRequest
	(*AddChatIgnoreRequest)(nil),            // 12: systerapb.AddChatIgnoreRequest
	(*RemoveChatIgnoreRequest)(nil),         // 13: systerapb.RemoveChatIgnoreRequest
	(*ChatIgnoreResponse)(nil),              // 14: systerapb.ChatIgnoreResponse
	(*SystemStream)(nil),                    // 15: systerapb.SystemStream
	(*PlayerStream)(nil),                    // 16: systerapb.PlayerStream
	(*PunishmentStream)(nil),                // 17: systerapb.PunishmentStream
	(*PunishStreamEntry)(nil),               // 18: systerapb.PunishStreamEntry
	(*GroupStream)(nil),                     // 19: systerapb.GroupStream
	(*ChatStream)(nil),                      // 20: systerapb.ChatStream
	(*PlayerIdentity)(nil),                  // 21: systerapb.PlayerIdentity
	(*GetPlayerIdentityByNameRequest)(nil),  // 22: systerapb.GetPlayerIdentityByNameRequest
	(*GetPlayerIdentityByNameResponse)(nil), // 23: systerapb.GetPlayerIdentityByNameResponse
	(*PlayerSettings)(nil),                  // 24: systerapb.PlayerSettings
	(*PlayerEntry)(nil),                     // 25: systerapb.PlayerEntry
	(*InitPlayerProfileRequest)(nil),        // 26: systerapb.InitPlayerProfileRequest
	(*InitPlayerProfileResponse)(nil),       // 27: systerapb.InitPlayerProfileResponse
	(*FetchPlayerProfileRequest)(nil),       // 28: systerapb.FetchPlayerProfileRequest
	(*FetchPlayerProfileByNameRequest)(nil), // 29: systerapb.FetchPlayerProfileByNameRequest
	(*FetchPlayerProfileResponse)(nil),      // 30: systerapb.FetchPlayerProfileResponse
	(*SetPlayerGroupsRequest)(nil),          // 31: systerapb.SetPlayerGroupsRequest
	(*SetPlayerServerRequest)(nil),          // 32: systerapb.SetPlayerServerRequest
	(*RemovePlayerServerRequest)(nil),       // 33: systerapb.RemovePlayerServerRequest
	(*SetPlayerSettingsRequest)(nil),        // 34: systerapb.SetPlayerSettingsRequest
	(*AddressesEntry)(nil),                  // 35: systerapb.AddressesEntry
	(*AltLookupEntry)(nil),                  // 36: systerapb.AltLookupEntry
	(*AltLookupRequest)(nil),                // 37: systerapb.AltLookupRequest
	(*AltLookupResponse)(nil),               // 38: systerapb.AltLookupResponse
	(*PunishEntry)(nil),                     // 39: systerapb.PunishEntry
	(*GetPlayerPunishRequest)(nil),          // 40: systerapb.GetPlayerPunishRequest
	(*GetPlayerPunishResponse)(nil),         // 41: systerapb.GetPlayerPunishResponse
	(*SetPlayerPunishRequest)(nil),          // 42: systerapb.SetPlayerPunishRequest
	(*SetPlayerPunishResponse)(nil),         // 43: systerapb.SetPlayerPunishResponse
	(*UnBanRequest)(nil),                    // 44: systerapb.UnBanRequest
	(*UnBanResponse)(nil),                   // 45: systerapb.UnBanResponse
	(*ReportEntry)(nil),                     // 46: systerapb.ReportEntry
	(*ReportRequest)(nil),                   // 47: systerapb.ReportRequest
	(*ReportResponse)(nil),                  // 48: systerapb.ReportResponse
	(*GroupEntry)(nil),                      // 49: systerapb.GroupEntry
	(*PermissionsEntry)(nil),                // 50: systerapb.PermissionsEntry
	(*FetchGroupsRequest)(nil),              // 51: systerapb.FetchGroupsRequest
	(*FetchGroupsResponse)(nil),             // 52: systerapb.FetchGroupsResponse
	(*CreateGroupRequest)(nil),              // 53: systerapb.CreateGroupRequest
	(*RemoveGroupRequest)(nil),              // 54: systerapb.RemoveGroupRequest
	(*AddPermissionRequest)(nil),            // 55: systerapb.AddPermissionRequest
	(*RemovePermissionRequest)(nil),         // 56: systerapb.RemovePermissionRequest
}
var file_systera_proto_depIdxs = []int32{
	21, // 0: systerapb.ChatEntry.author:type_name -> systerapb.PlayerIdentity
	10, // 1: systerapb.ChatRequest.entry:type_name -> systerapb.ChatEntry
	21, // 2: systerapb.AddChatIgnoreRequest.target:type_name -> systerapb.PlayerIdentity
	21, // 3: systerapb.RemoveChatIgnoreRequest.target:type_name -> systerapb.PlayerIdentity
	0,  // 4: systerapb.ChatIgnoreResponse.result:type_name -> systerapb.CallResult
	21, // 5: systerapb.ChatIgnoreResponse.identity:type_name -> systerapb.PlayerIdentity
	2,  // 6: systerapb.SystemStream.type:type_name -> systerapb.SystemStream.Type
	3,  // 7: systerapb.PlayerStream.type:type_name -> systerapb.PlayerStream.Type
	25, // 8: systerapb.PlayerStream.entry:type_name -> systerapb.PlayerEntry
	4,  // 9: systerapb.PunishmentStream.type:type_name -> systerapb.PunishmentStream.Type
	18, // 10: systerapb.PunishmentStream.punish_stream_entry:type_name -> systerapb.PunishStreamEntry
	46, // 11: systerapb.PunishmentStream.report_entry:type_name -> systerapb.ReportEntry
	39, // 12: systerapb.PunishStreamEntry.entry:type_name -> systerapb.PunishEntry
	5,  // 13: systerapb.GroupStream.type:type_name -> systerapb.GroupStream.Type
	49, // 14: systerapb.GroupStream.group_entry:type_name -> systerapb.GroupEntry
	6,  // 15: systerapb.ChatStream.type:type_name -> systerapb.ChatStream.Type
	10, // 16: systerapb.ChatStream.chat_entry:type_name -> systerapb.ChatEntry
	21, // 17: systerapb.GetPlayerIdentityByNameResponse.identity:type_name -> systerapb.PlayerIdentity
	24, // 18: systerapb.PlayerEntry.settings:type_name -> systerapb.PlayerSettings
	21, // 19: systerapb.PlayerEntry.player_ignore:type_name -> systerapb.PlayerIdentity
	25, // 20: systerapb.InitPlayerProfileResponse.entry:type_name -> systerapb.PlayerEntry
	25, // 21: systerapb.FetchPlayerProfileResponse.entry:type_name -> systerapb.PlayerEntry
	24, // 22: systerapb.SetPlayerSettingsRequest.settings:type_name -> systerapb.PlayerSettings
	35, // 23: systerapb.AltLookupEntry.addresses:type_name -> systerapb.AddressesEntry
	36, // 24: systerapb.AltLookupResponse.entries:type_name -> systerapb.AltLookupEntry
	1,  // 25: systerapb.PunishEntry.level:type_name -> systerapb.PunishLevel
	21, // 26: systerapb.PunishEntry.punished_from:type_name -> systerapb.PlayerIdentity
	21, // 27: systerapb.PunishEntry.punished_to:type_name -> systerapb.PlayerIdentity
	1,  // 28: systerapb.GetPlayerPunishRequest.filter_level:type_name -> systerapb.PunishLevel
	39, // 29: systerapb.GetPlayerPunishResponse.entry:type_name -> systerapb.PunishEntry
	39, // 30: systerapb.SetPlayerPunishRequest.entry:type_name -> systerapb.PunishEntry
	21, // 31: systerapb.UnBanRequest.target:type_name -> systerapb.PlayerIdentity
	21, // 32: systerapb.ReportEntry.from:type_name -> systerapb.PlayerIdentity
	21, // 33: systerapb.ReportEntry.to:type_name -> systerapb.PlayerIdentity
	21, // 34: systerapb.ReportRequest.from:type_name -> systerapb.PlayerIdentity
	21, // 35: systerapb.ReportRequest.to:type_name -> systerapb.PlayerIdentity
	50, // 36: systerapb.GroupEntry.permissions:type_name -> systerapb.PermissionsEntry
	49, // 37: systerapb.FetchGroupsResponse.groups:type_name -> systerapb.GroupEntry
	49, // 38: systerapb.CreateGroupRequest.group_entry:type_name -> systerapb.GroupEntry
	8,  // 39: systerapb.Systera.Announce:input_type -> systerapb.AnnounceRequest
	9,  // 40: systerapb.Systera.Dispatch:input_type -> systerapb.DispatchRequest
	11, // 41: systerapb.Systera.Chat:input_type -> systerapb.ChatRequest
	12, // 42: systerapb.Systera.AddChatIgnore:input_type -> systerapb.AddChatIgnoreRequest
	13, // 43: systerapb.Systera.RemoveChatIgnore:input_type -> systerapb.RemoveChatIgnoreRequest
	22, // 44: systerapb.Systera.GetPlayerIdentityByName:input_type -> systerapb.GetPlayerIdentityByNameRequest
	26, // 45: systerapb.Systera.InitPlayerProfile:input_type -> systerapb.InitPlayerProfileRequest
	28, // 46: systerapb.Systera.FetchPlayerProfile:input_type -> systerapb.FetchPlayerProfileRequest
	29, // 47: systerapb.Systera.FetchPlayerProfileByName:input_type -> systerapb.FetchPlayerProfileByNameRequest
	31, // 48: systerapb.Systera.SetPlayerGroups:input_type -> systerapb.SetPlayerGroupsRequest
	32, // 49: systerapb.Systera.SetPlayerServer:input_type -> systerapb.SetPlayerServerRequest
	33, // 50: systerapb.Systera.RemovePlayerServer:input_type -> systerapb.RemovePlayerServerRequest
	34, // 51: systerapb.Systera.SetPlayerSettings:input_type -> systerapb.SetPlayerSettingsRequest
	37, // 52: systerapb.Systera.AltLookup:input_type -> systerapb.AltLookupRequest
	40, // 53: systerapb.Systera.GetPlayerPunish:input_type -> systerapb.GetPlayerPunishRequest
	42, // 54: systerapb.Systera.SetPlayerPunish:input_type -> systerapb.SetPlayerPunishRequest
	44, // 55: systerapb.Systera.UnBan:input_type -> systerapb.UnBanRequest
	47, // 56: systerapb.Systera.Report:input_type -> systerapb.ReportRequest
	51, // 57: systerapb.Systera.FetchGroups:input_type -> systerapb.FetchGroupsRequest
	53, // 58: systerapb.Systera.CreateGroup:input_type -> systerapb.CreateGroupRequest
	54, // 59: systerapb.Systera.RemoveGroup:input_type -> systerapb.RemoveGroupRequest
	55, // 60: systerapb.Systera.AddPermission:input_type -> systerapb.AddPermissionRequest
	56, // 61: systerapb.Systera.RemovePermission:input_type -> systerapb.RemovePermissionRequest
	7,  // 62: systerapb.Systera.Announce:output_type -> systerapb.Empty
	7,  // 63: systerapb.Systera.Dispatch:output_type -> systerapb.Empty
	7,  // 64: systerapb.Systera.Chat:output_type -> systerapb.Empty
	14, // 65: systerapb.Systera.AddChatIgnore:output_type -> systerapb.ChatIgnoreResponse
	14, // 66: systerapb.Systera.RemoveChatIgnore:output_type -> systerapb.ChatIgnoreResponse
	23, // 67: systerapb.Systera.GetPlayerIdentityByName:output_type -> systerapb.GetPlayerIdentityByNameResponse
	27, // 68: systerapb.Systera.InitPlayerProfile:output_type -> systerapb.InitPlayerProfileResponse
	30, // 69: systerapb.Systera.FetchPlayerProfile:output_type -> systerapb.FetchPlayerProfileResponse
	30, // 70: systerapb.Systera.FetchPlayerProfileByName:output_type -> systerapb.FetchPlayerProfileResponse
	7,  // 71: systerapb.Systera.SetPlayerGroups:output_type -> systerapb.Empty
	7,  // 72: systerapb.Systera.SetPlayerServer:output_type -> systerapb.Empty
	7,  // 73: systerapb.Systera.RemovePlayerServer:output_type -> systerapb.Empty
	7,  // 74: systerapb.Systera.SetPlayerSettings:output_type -> systerapb.Empty
	38, // 75: systerapb.Systera.AltLookup:output_type -> systerapb.AltLookupResponse
	41, // 76: systerapb.Systera.GetPlayerPunish:output_type -> systerapb.GetPlayerPunishResponse
	43, // 77: systerapb.Systera.SetPlayerPunish:output_type -> systerapb.SetPlayerPunishResponse
	45, // 78: systerapb.Systera.UnBan:output_type -> systerapb.UnBanResponse
	48, // 79: systerapb.Systera.Report:output_type -> systerapb.ReportResponse
	52, // 80: systerapb.Systera.FetchGroups:output_type -> systerapb.FetchGroupsResponse
	7,  // 81: systerapb.Systera.CreateGroup:output_type -> systerapb.Empty
	7,  // 82: systerapb.Systera.RemoveGroup:output_type -> systerapb.Empty
	7,  // 83: systerapb.Systera.AddPermission:output_type -> systerapb.Empty
	7,  // 84: systerapb.Systera.RemovePermission:output_type -> systerapb.Empty
	62, // [62:85] is the sub-list for method output_type
	39, // [39:62] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_systera_proto_init() }
func file_systera_proto_init() {
	if File_systera_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_systera_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnnounceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DispatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddChatIgnoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveChatIgnoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatIgnoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PunishmentStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PunishStreamEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerIdentityByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerIdentityByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitPlayerProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitPlayerProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchPlayerProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchPlayerProfileByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchPlayerProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePlayerServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressesEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AltLookupEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AltLookupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AltLookupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PunishEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerPunishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerPunishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerPunishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerPunishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnBanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnBanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionsEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_systera_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_systera_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_systera_proto_goTypes,
		DependencyIndexes: file_systera_proto_depIdxs,
		EnumInfos:         file_systera_proto_enumTypes,
		MessageInfos:      file_systera_proto_msgTypes,
	}.Build()
	File_systera_proto = out.File
	file_systera_proto_rawDesc = nil
	file_systera_proto_goTypes = nil
	file_systera_proto_depIdxs = nil
}
